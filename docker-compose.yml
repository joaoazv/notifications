version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    expose:
      - '9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'notifications_db'
      MYSQL_USER: 'mysql_user'
      MYSQL_PASSWORD: 'mysql_password'
      MYSQL_ROOT_PASSWORD: 'root_password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - /data/notifications-db
  # notification-listener:
  #   depends_on:
  #     - kafka
  #   build: notification-listener
  #   restart: on-failure
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - /data/notification-listener
  #   environment:
  #     - "SPRING_PROFILES_ACTIVE=dev"
  # notification-db-service:
  #   depends_on:
  #     - kafka
  #     - db
  #   build: notification-db-service
  #   restart: on-failure
  #   ports:
  #     - "8081:8081"
  #   volumes:
  #     - /data/notification-db-service
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - "SPRING_PROFILES_ACTIVE=dev"
  # notification-dispatcher:
  #   depends_on:
  #     - kafka
  #   build: notification-dispatcher
  #   restart: on-failure
  #   volumes:
  #     - /data/notification-dispatcher
  #   environment:
  #     - "SPRING_PROFILES_ACTIVE=dev"
volumes:
  notifications-db: